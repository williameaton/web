/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(self, function() {
return (self["webpackChunkglance"] = self["webpackChunkglance"] || []).push([["glance-external-ITKReader"],{

/***/ "./externals/ITKReader/ITKDicomImageReader.js":
/*!****************************************************!*\
  !*** ./externals/ITKReader/ITKDicomImageReader.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"extend\": function() { return /* binding */ extend; },\n/* harmony export */   \"newInstance\": function() { return /* binding */ newInstance; }\n/* harmony export */ });\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n/* harmony import */ var regenerator_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(regenerator_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _kitware_vtk_js_macro__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kitware/vtk.js/macro */ \"./node_modules/@kitware/vtk.js/macro.js\");\n/* harmony import */ var paraview_glance_src_vtk_ITKHelper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! paraview-glance/src/vtk/ITKHelper */ \"./src/vtk/ITKHelper/index.js\");\n/* harmony import */ var itk_readImageDICOMFileSeries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! itk/readImageDICOMFileSeries */ \"./node_modules/itk/readImageDICOMFileSeries.js\");\n/* eslint-disable-next-line no-unused-vars */\n\n\n\n\nconst {\n  convertItkToVtkImage\n} = paraview_glance_src_vtk_ITKHelper__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\nfunction getArrayName(filename) {\n  const idx = filename.lastIndexOf('.');\n  const name = idx > -1 ? filename.substring(0, idx) : filename;\n  return `Scalars ${name}`;\n}\n\n// ----------------------------------------------------------------------------\n// vtkITKDicomImageReader methods\n// ----------------------------------------------------------------------------\n\nfunction vtkITKDicomImageReader(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkITKDicomImageReader');\n\n  // Returns a promise to signal when image is ready\n  publicAPI.readFileSeries = files => {\n    if (!files || !files.length || files === model.files) {\n      return Promise.resolve();\n    }\n    model.files = files;\n    return (0,itk_readImageDICOMFileSeries__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(files).then(_ref => {\n      let {\n        image\n      } = _ref;\n      return image;\n    }).then(itkImage => {\n      const imageData = convertItkToVtkImage(itkImage, {\n        scalarArrayName: model.arrayName || getArrayName(model.fileName)\n      });\n      model.output[0] = imageData;\n      publicAPI.modified();\n    });\n  };\n  publicAPI.requestData = (/* inData, outData */\n  ) => {\n    publicAPI.readFileSeries(model.files, model.fileName);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  fileName: '',\n  // If null/undefined a unique array will be generated\n  arrayName: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  _kitware_vtk_js_macro__WEBPACK_IMPORTED_MODULE_1__[\"default\"].obj(publicAPI, model);\n  _kitware_vtk_js_macro__WEBPACK_IMPORTED_MODULE_1__[\"default\"].algo(publicAPI, model, 0, 1);\n  _kitware_vtk_js_macro__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setGet(publicAPI, model, ['fileName', 'arrayName']);\n\n  // vtkITKDicomImageReader methods\n  vtkITKDicomImageReader(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = _kitware_vtk_js_macro__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance(extend, 'vtkITKDicomImageReader');\n\n// ----------------------------------------------------------------------------\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  newInstance,\n  extend\n});\n\n//# sourceURL=webpack://glance/./externals/ITKReader/ITKDicomImageReader.js?");

/***/ }),

/***/ "./externals/ITKReader/index.js":
/*!**************************************!*\
  !*** ./externals/ITKReader/index.js ***!
  \**************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"imageExtensions\": function() { return /* binding */ imageExtensions; },\n/* harmony export */   \"polyDataExtensions\": function() { return /* binding */ polyDataExtensions; },\n/* harmony export */   \"extensions\": function() { return /* binding */ extensions; },\n/* harmony export */   \"registerToGlance\": function() { return /* binding */ registerToGlance; }\n/* harmony export */ });\n/* harmony import */ var _kitware_vtk_js_IO_Misc_ITKImageReader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kitware/vtk.js/IO/Misc/ITKImageReader */ \"./node_modules/@kitware/vtk.js/IO/Misc/ITKImageReader.js\");\n/* harmony import */ var _kitware_vtk_js_IO_Misc_ITKPolyDataReader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kitware/vtk.js/IO/Misc/ITKPolyDataReader */ \"./node_modules/@kitware/vtk.js/IO/Misc/ITKPolyDataReader.js\");\n/* harmony import */ var itk_extensionToImageIO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! itk/extensionToImageIO */ \"./node_modules/itk/extensionToImageIO.js\");\n/* harmony import */ var itk_extensionToImageIO__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(itk_extensionToImageIO__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var itk_readImageArrayBuffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! itk/readImageArrayBuffer */ \"./node_modules/itk/readImageArrayBuffer.js\");\n/* harmony import */ var itk_extensionToPolyDataIO__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! itk/extensionToPolyDataIO */ \"./node_modules/itk/extensionToPolyDataIO.js\");\n/* harmony import */ var itk_extensionToPolyDataIO__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(itk_extensionToPolyDataIO__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var itk_readPolyDataArrayBuffer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! itk/readPolyDataArrayBuffer */ \"./node_modules/itk/readPolyDataArrayBuffer.js\");\n/* harmony import */ var _ITKDicomImageReader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ITKDicomImageReader */ \"./externals/ITKReader/ITKDicomImageReader.js\");\n\n\n\n\n\n\n\n_kitware_vtk_js_IO_Misc_ITKImageReader__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setReadImageArrayBufferFromITK(itk_readImageArrayBuffer__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n_kitware_vtk_js_IO_Misc_ITKPolyDataReader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setReadPolyDataArrayBufferFromITK(itk_readPolyDataArrayBuffer__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\nconst imgExtSet = new Set(Array.from(itk_extensionToImageIO__WEBPACK_IMPORTED_MODULE_2___default().keys()).map(ext => ext.toLowerCase()));\n// blacklist json, since we load in measurements.json instead\nimgExtSet.delete('json');\nconst imageExtensions = Array.from(imgExtSet);\nconst polyDataExtensions = Array.from(new Set(Array.from(itk_extensionToPolyDataIO__WEBPACK_IMPORTED_MODULE_4___default().keys()).map(ext => ext.toLowerCase())));\nconst extensions = imageExtensions.concat(polyDataExtensions);\nfunction registerToGlance(Glance) {\n  if (Glance) {\n    imageExtensions.filter(e => e !== 'dcm').forEach(extension => Glance.registerReader({\n      extension,\n      name: `${extension.toUpperCase()} Reader`,\n      vtkReader: _kitware_vtk_js_IO_Misc_ITKImageReader__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n      binary: true,\n      fileNameMethod: 'setFileName'\n    }));\n    polyDataExtensions.forEach(extension => Glance.registerReader({\n      extension,\n      name: `${extension.toUpperCase()} Reader`,\n      vtkReader: _kitware_vtk_js_IO_Misc_ITKPolyDataReader__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n      binary: true,\n      fileNameMethod: 'setFileName'\n    }));\n    Glance.registerReader({\n      extension: 'dcm',\n      name: 'DICOM File Series Reader',\n      vtkReader: _ITKDicomImageReader__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n      fileNameMethod: 'setFileName',\n      fileSeriesMethod: 'readFileSeries',\n      binary: true\n    });\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  extensions,\n  registerToGlance\n});\nconst Glance = (typeof window === 'undefined' ? {} : window).Glance;\nregisterToGlance(Glance);\n\n//# sourceURL=webpack://glance/./externals/ITKReader/index.js?");

/***/ }),

/***/ "./src/vtk/ITKHelper/index.js":
/*!************************************!*\
  !*** ./src/vtk/ITKHelper/index.js ***!
  \************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _kitware_vtk_js_macros__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @kitware/vtk.js/macros */ \"./node_modules/@kitware/vtk.js/macros.js\");\n/* harmony import */ var _kitware_vtk_js_Common_DataModel_ImageData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @kitware/vtk.js/Common/DataModel/ImageData */ \"./node_modules/@kitware/vtk.js/Common/DataModel/ImageData.js\");\n/* harmony import */ var _kitware_vtk_js_Common_Core_DataArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @kitware/vtk.js/Common/Core/DataArray */ \"./node_modules/@kitware/vtk.js/Common/Core/DataArray.js\");\n\n\n\nconst {\n  vtkErrorMacro\n} = _kitware_vtk_js_macros__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n\n// see itk.js/PixelTypes.js\nconst ITKPixelTypes = {\n  Unknown: 0,\n  Scalar: 1,\n  RGB: 2,\n  RGBA: 3,\n  Offset: 4,\n  Vector: 5,\n  Point: 6,\n  CovariantVector: 7,\n  SymmetricSecondRankTensor: 8,\n  DiffusionTensor3D: 9,\n  Complex: 10,\n  FixedArray: 11,\n  Array: 12,\n  Matrix: 13,\n  VariableLengthVector: 14,\n  VariableSizeMatrix: 15\n};\n\n/**\n * Converts an itk.js image to a vtk.js image.\n *\n * Requires an itk.js image as input.\n */\nfunction convertItkToVtkImage(itkImage) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const vtkImage = {\n    origin: [0, 0, 0],\n    spacing: [1, 1, 1]\n  };\n  const dimensions = [1, 1, 1];\n  const direction = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  for (let idx = 0; idx < itkImage.imageType.dimension; ++idx) {\n    vtkImage.origin[idx] = itkImage.origin[idx];\n    vtkImage.spacing[idx] = itkImage.spacing[idx];\n    dimensions[idx] = itkImage.size[idx];\n    for (let col = 0; col < itkImage.imageType.dimension; ++col) {\n      // ITK (and VTKMath) use a row-major index axis, but the direction\n      // matrix on the vtkImageData is a webGL matrix, which uses a\n      // column-major data layout. Transpose the direction matrix from\n      // itkImage when instantiating that vtkImageData direction matrix.\n      direction[col + idx * 3] = itkImage.direction.data[idx + col * itkImage.imageType.dimension];\n    }\n  }\n\n  // Create VTK Image Data\n  const imageData = _kitware_vtk_js_Common_DataModel_ImageData__WEBPACK_IMPORTED_MODULE_1__[\"default\"].newInstance(vtkImage);\n\n  // Create VTK point data -- the data associated with the pixels / voxels\n  const pointData = _kitware_vtk_js_Common_Core_DataArray__WEBPACK_IMPORTED_MODULE_2__[\"default\"].newInstance({\n    name: options.scalarArrayName || 'Scalars',\n    values: itkImage.data,\n    numberOfComponents: itkImage.imageType.components\n  });\n  imageData.setDirection(direction);\n  imageData.setDimensions(...dimensions);\n  // Always associate multi-component pixel types with vtk.js point data\n  // scalars to facilitate multi-component volume rendering\n  imageData.getPointData().setScalars(pointData);\n\n  // Associate the point data that are 3D vectors / tensors\n  // Refer to itk-js/src/PixelTypes.js for numerical values\n  switch (itkImage.imageType.pixelType) {\n    case ITKPixelTypes.Scalar:\n      break;\n    case ITKPixelTypes.RGB:\n      break;\n    case ITKPixelTypes.RGBA:\n      break;\n    case ITKPixelTypes.Offset:\n      break;\n    case ITKPixelTypes.Vector:\n      if (itkImage.imageType.dimension === 3 && itkImage.imageType.components === 3) {\n        imageData.getPointData().setVectors(pointData);\n      }\n      break;\n    case ITKPixelTypes.Point:\n      break;\n    case ITKPixelTypes.CovariantVector:\n      if (itkImage.imageType.dimension === 3 && itkImage.imageType.components === 3) {\n        imageData.getPointData().setVectors(pointData);\n      }\n      break;\n    case ITKPixelTypes.SymmetricSecondRankTensor:\n      if (itkImage.imageType.dimension === 3 && itkImage.imageType.components === 6) {\n        imageData.getPointData().setTensors(pointData);\n      }\n      break;\n    case ITKPixelTypes.DiffusionTensor3D:\n      if (itkImage.imageType.dimension === 3 && itkImage.imageType.components === 6) {\n        imageData.getPointData().setTensors(pointData);\n      }\n      break;\n    case ITKPixelTypes.Complex:\n      break;\n    case ITKPixelTypes.FixedArray:\n      break;\n    case ITKPixelTypes.Array:\n      break;\n    case ITKPixelTypes.Matrix:\n      break;\n    case ITKPixelTypes.VariableLengthVector:\n      break;\n    case ITKPixelTypes.VariableSizeMatrix:\n      break;\n    default:\n      vtkErrorMacro(`Cannot handle unexpected ITK.js pixel type ${itkImage.imageType.pixelType}`);\n      return null;\n  }\n  return imageData;\n}\nconst vtkArrayTypeToItkComponentType = new Map([['Uint8Array', 'uint8_t'], ['Int8Array', 'int8_t'], ['Uint16Array', 'uint16_t'], ['Int16Array', 'int16_t'], ['Uint32Array', 'uint32_t'], ['Int32Array', 'int32_t'], ['Float32Array', 'float'], ['Float64Array', 'double']]);\n\n/**\n * Converts a vtk.js image to an itk.js image.\n *\n * Requires a vtk.js image as input.\n */\nfunction convertVtkToItkImage(vtkImage) {\n  let copyData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const itkImage = {\n    imageType: {\n      dimension: 3,\n      pixelType: ITKPixelTypes.Scalar,\n      componentType: '',\n      components: 1\n    },\n    name: 'name',\n    origin: vtkImage.getOrigin(),\n    spacing: vtkImage.getSpacing(),\n    direction: {\n      data: [1, 0, 0, 0, 1, 0, 0, 0, 1]\n    },\n    size: vtkImage.getDimensions()\n  };\n  const direction = vtkImage.getDirection();\n  const dimension = itkImage.size.length;\n  itkImage.imageType.dimension = dimension;\n  itkImage.direction.rows = dimension;\n  itkImage.direction.columns = dimension;\n\n  // Transpose the direction matrix from column-major to row-major\n  for (let idx = 0; idx < dimension; ++idx) {\n    for (let idy = 0; idy < dimension; ++idy) {\n      itkImage.direction.data[idx + idy * dimension] = direction[idy + idx * dimension];\n    }\n  }\n  const pointData = vtkImage.getPointData();\n  let vtkArray;\n  if (pointData.getTensors() !== null) {\n    itkImage.imageType.pixelType = ITKPixelTypes.DiffusionTensor3D;\n    vtkArray = pointData.getTensors();\n  } else if (pointData.getVectors() != null) {\n    itkImage.imageType.pixelType = ITKPixelTypes.Vector;\n    vtkArray = pointData.getVectors();\n  } else {\n    vtkArray = pointData.getScalars();\n  }\n  itkImage.imageType.componentType = vtkArrayTypeToItkComponentType.get(vtkArray.getDataType());\n  if (copyData) {\n    // Copy the data array\n    itkImage.data = vtkArray.getData().slice(0);\n  } else {\n    itkImage.data = vtkArray.getData();\n  }\n  return itkImage;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  convertItkToVtkImage,\n  convertVtkToItkImage\n});\n\n//# sourceURL=webpack://glance/./src/vtk/ITKHelper/index.js?");

/***/ }),

/***/ "?d4c0":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function() {

eval("/* (ignored) */\n\n//# sourceURL=webpack://glance/crypto_(ignored)?");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["vendors"], function() { return __webpack_exec__("./externals/ITKReader/index.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ return __webpack_exports__;
/******/ }
]);
});